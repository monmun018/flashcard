plugins {
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
}

group = 'com.app'
version = '0.0.1-SNAPSHOT'
description = 'Flashcard WebApp'
sourceCompatibility = '21'
targetCompatibility = '21'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    
    // Database drivers
    runtimeOnly 'org.postgresql:postgresql'
    
    // Database migration
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.hibernate:hibernate-validator:8.0.1.Final'
    
    // Phase 1: Foundation Setup Dependencies
    // Security Framework
    implementation 'org.springframework.boot:spring-boot-starter-security'
    
    // Validation Framework (spring-boot-starter-validation includes hibernate-validator)
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // Testing Support for Security
    testImplementation 'org.springframework.security:spring-security-test'
    
    // Optional: DTO Mapping (for future phases)
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    
    
    // JWT and API dependencies
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    
    // OpenAPI documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
}

test {
    useJUnitPlatform()
}

bootJar {
    exclude('**/lombok/**')
}